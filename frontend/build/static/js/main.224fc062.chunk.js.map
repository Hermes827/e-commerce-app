{"version":3,"sources":["serviceWorker.js","actions/index.js","components/appNavbar/searchBar.js","components/appNavbar/cartIcon.js","components/appNavbar/appNavbar.js","components/marketplace/product.js","components/marketplace/marketplace.js","components/homepage/homepage.js","components/authentication/login.js","components/authentication/signup.js","components/profile/profile.js","components/shoppingCart/item.js","components/checkout/checkout.js","components/shoppingCart/shoppingCart.js","components/authentication/signout.js","components/uploadProduct/uploadProduct.js","components/profile/myProfile.js","components/profile/editMyProfile.js","routes.js","reducers/index.js","store/index.js","index.js"],"names":["Boolean","window","location","hostname","match","getUserInfo","arg","myHeaders","Headers","append","dispatch","getState","fetch","method","redirect","headers","then","response","json","type","payload","getInfo","SearchBar","captureText","e","setState","target","name","value","onSubmit","preventDefault","state","searchTerm","result","console","log","catch","error","InputGroup","className","localStorage","token","Form","Control","placeholder","onChange","this","Append","Text","onClick","React","Component","CartIcon","cartCounter","props","currentUser","shoppingCart","length","undefined","size","compose","withRouter","connect","AppNavbar","Nav","Link","href","NavDropdown","title","Item","Divider","username","Navbar","bg","variant","fixed","Container","fluid","renderUploadProductLink","renderLoginLink","renderAccountDropdownMenu","mapDispatchToProps","Product","addProductToCart","raw","JSON","stringify","_id","product","body","src","image","alt","description","price","Marketplace","products","getProducts","map","key","Homepage","Login","password","history","push","returnHome","Jumbotron","Button","Signup","email","to","Profile","toggle","toggleProfile","item","sellerID","seller","showProfile","renderProfile","toggleProfileState","Row","Col","lg","sellerUsername","loadStripe","process","ShoppingCart","items","checkout","setTimeout","getItemsInfo","Signout","UploadProduct","captureFile","files","formData","FormData","successfulUpload","myRef","current","renderSuccessfulUpload","Alert","onClose","dismissible","createRef","ref","MyProfile","Card","Img","profileImg","Body","Title","ListGroup","EditMyProfile","changeProfilePicture","changePicture","requestOptions","renderSelectPicture","inputKey","Routes","exact","path","component","initialState","store","createStore","action","Object","assign","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.224fc062.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const GET_INFO = 'GET_INFO';\nexport const getInfo = (arg) => ({\n  type: GET_INFO,\n  payload: { arg }\n});\n\nexport function getUserInfo(arg) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"x-access-token\", arg);\n  return function(dispatch, getState) {\n    var requestOptions = {\n    method: 'GET',\n    redirect: 'follow',\n    headers: myHeaders\n    };\n    fetch(\"http://localhost:4000/auth/info\", requestOptions)\n    .then(response => response.json())\n    .then(json => {\n      dispatch(getInfo(json))\n    })\n  };\n}\n\n// export const GET_CHOSENMAIL = 'GET_CHOSENMAIL';\n// export const getChosenMail = (arg) => ({\n//   type: GET_CHOSENMAIL,\n//   payload: { arg }\n// })\n\n// export function storeUserCookie(arg) {\n//   return function(dispatch, getState) {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"x-access-token\", arg);\n//     var requestOptions = {\n//       method: 'GET',\n//       headers: myHeaders,\n//       redirect: 'follow'\n//     };\n//     fetch(\"http://localhost:4000/api/auth/info\", requestOptions)\n//       .then(response => response.json())\n//       .then(json => {\n//         dispatch(getData(json))\n//       })\n//   };\n// }\n","import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { Search } from 'react-bootstrap-icons';\n\nclass SearchBar extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      searchTerm: \"\"\n    }\n  }\n\n  captureText = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n    }\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n\n  fetch(`http://localhost:4000/products/search?searchTerm=${this.state.searchTerm}`, requestOptions)\n    .then(response => response.json())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n    }\n\n    //searchbar function is partially done, properly returns json data, just need to fill out\n    //the rest of the functionality\n\n  render(){\n  return (\n    <InputGroup className={(localStorage.token) ? \"navbarSearchbarInputGroupLoggedIn\" : \"navbarSearchbarInputGroupLoggedOut\"}>\n    <Form.Control type=\"text\" placeholder=\"Search\" name=\"searchTerm\" onChange={this.captureText}/>\n    <InputGroup.Append>\n      <InputGroup.Text><Search onClick={this.onSubmit}/></InputGroup.Text>\n    </InputGroup.Append>\n    </InputGroup>\n  );\n}\n}\n\nexport default SearchBar\n","import React from 'react';\nimport { Cart4 } from 'react-bootstrap-icons';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux'\n\nclass CartIcon extends React.Component {\n\n  cartCounter = () => {\n    if(this.props.currentUser.shoppingCart.length > 9){\n      return \"9+\"\n    } else {\n      return this.props.currentUser.shoppingCart.length\n    }\n  }\n\n  render(){\n  return (\n    <>{(this.props.currentUser.shoppingCart === undefined || this.props.currentUser.shoppingCart.length === 0)\n        ? <Cart4 size={40}/> : <div><div className=\"shoppingCartIconCounter\">{this.cartCounter()}</div>\n        <Cart4 className=\"shoppingCartIcon\" size={40}/></div>}</>\n      );\n    }\n  }\n\nconst mapDispatchToProps = {\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n})\n\nexport default compose(withRouter,\n  connect(mapStateToProps, mapDispatchToProps))(CartIcon);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux'\nimport { getUserInfo } from '../../actions/index.js'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport SearchBar from './searchBar'\nimport CartIcon from './cartIcon.js'\n\nclass AppNavbar extends React.Component{\n\n  componentDidMount(){\n    if(localStorage.token){this.props.getUserInfo(localStorage.token)}\n  }\n\n  renderUploadProductLink(){\n    if(localStorage.token){\n      return <Nav.Link className=\"navbarUploadLink\" href=\"/upload-product\">Upload Product to MarketPlace</Nav.Link>\n    } else {\n      return <div></div>\n    }\n  }\n\n  renderLoginLink(){\n    if(!localStorage.token){\n      return <Nav.Link className=\"navbarLink\" href=\"/login\">Log In</Nav.Link>\n    }\n  }\n\n  renderAccountDropdownMenu(){\n    if(localStorage.token){\n      return (\n        <NavDropdown className=\"navbarDropdown\" title=\"Account\">\n        <NavDropdown.Item href=\"/my-profile\">View Profile</NavDropdown.Item>\n        <NavDropdown.Item href=\"/edit-my-profile\">Edit Profile</NavDropdown.Item>\n        <NavDropdown.Item href=\"/settings\">Settings</NavDropdown.Item>\n        <NavDropdown.Item href=\"/my-products\">My Products</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"/signout\">Sign Out {this.props.currentUser.username}</NavDropdown.Item>\n        </NavDropdown>\n      )\n    }\n  }\n\n render(){\n  return (\n    <div className=\"navbarSpacer\">\n    <Navbar className=\"navbar\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\n     <Container fluid>\n     <h1 className=\"navbarH1\">Herb Bazaar</h1>\n     <SearchBar/>\n     {this.renderUploadProductLink()}\n     <Nav.Link className=\"navbarLink\" href=\"/\">Home</Nav.Link>\n     <Nav.Link className=\"navbarLink\" href={(localStorage.token) ? \"/shoppingcart\" : \"/signup\"}>\n      {(localStorage.token) ? <CartIcon/> : \"Sign Up\"}\n     </Nav.Link>\n     {this.renderLoginLink()}\n     {this.renderAccountDropdownMenu()}\n     </Container>\n    </Navbar>\n    {console.log(this.props.currentUser.username)}\n    </div>\n  );\n};\n}\n\nconst mapDispatchToProps = {\n  getUserInfo\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n})\n\nexport default compose(withRouter,\n  connect(mapStateToProps, mapDispatchToProps))(AppNavbar);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux'\nimport { getUserInfo } from '../../actions/index.js'\n\nclass Product extends React.Component {\n\n  addProductToCart = (e) => {\n    e.preventDefault()\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\"userID\": this.props.currentUser._id,\"productID\": this.props.product._id});\n    var requestOptions = {\n      method: 'PUT',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://localhost:4000/users/add-to-cart\", requestOptions)\n      .then(response => response.json())\n      .then(result => console.log(result))\n      .catch(error => console.log('error', error));\n    this.props.getUserInfo(localStorage.token)\n    }\n\n  render(){\n  return (\n    <div className=\"product\">\n    <img className=\"productImage\" src={this.props.product.image} alt=\"herb\"/>\n    <h1>{this.props.product.name}</h1>\n    <h3>{this.props.product.description}</h3>\n    <h3>{this.props.product.price}</h3>\n    <button onClick={this.addProductToCart}>add to cart</button>\n    </div>\n  );\n}\n}\n\nconst mapDispatchToProps = {\n  getUserInfo\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n})\n\nexport default compose(withRouter,\n  connect(mapStateToProps, mapDispatchToProps))(Product);\n","import React from 'react';\nimport Product from './product'\n\nclass Marketplace extends React.Component {\n\n    constructor(){\n      super()\n      this.state = {\n        products: []\n      }\n    }\n\n    componentDidMount(){\n      this.getProducts()\n    }\n\n  getProducts(){\n  var requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n\n  fetch(\"http://localhost:4000/products/\", requestOptions)\n    .then(response => response.json())\n    .then(result => {\n      this.setState({\n        products: result\n      })\n    })\n    .catch(error => console.log('error', error));\n  }\n\n  render(){\n  return (\n    <div className=\"marketplace\">\n    {this.state.products.map(product => {\n      return <Product product={product} key={product._id}/>\n    })}\n    </div>\n  );\n}\n}\n\nexport default Marketplace\n","import React from 'react';\nimport Marketplace from '../marketplace/marketplace'\n\nclass Homepage extends React.Component {\n\n  render(){\n  return (\n    <div className=\"homepage\">\n      <Marketplace/>\n    </div>\n  );\n}\n}\n\nexport default Homepage\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux'\nimport { getUserInfo } from '../../actions/index.js'\n\nclass Login extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      password: \"\",\n      username: \"\"\n    }\n  }\n\n  captureText = (e) => {\n      this.setState({\n        [e.target.name]: e.target.value\n      })\n    }\n\nonSubmit = (e) => {\n  e.preventDefault()\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\"username\": this.state.username, \"password\": this.state.password});\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch(\"http://localhost:4000/auth/login\", requestOptions)\n    .then(response => response.json())\n    .then(result => {\n      if(result.token){localStorage.token = result.token}\n      this.props.getUserInfo(localStorage.token)\n      this.props.history.push('/')\n    })\n    .catch(error => console.log('error', error));\n}\n\n  returnHome = () => {\n    this.props.history.push('/')\n  }\n\n  render(){\n  return (\n    <div className=\"login\">\n      <Jumbotron className=\"loginJumbotron\">\n        <h1 className=\"loginH1\">Log In to Your Account!</h1>\n        <div className=\"loginForm\">\n        <h1>Login</h1>\n        <form>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" placeholder=\"username\" onChange={this.captureText}/><br/>\n          <label>Password:</label>\n          <input className=\"loginPasswordInput\" type=\"password\" name=\"password\" placeholder=\"password\" onChange={this.captureText}/><br/>\n          <Button className=\"loginButton\" variant=\"primary\" onClick={this.onSubmit}>Log in</Button>\n          <Button className=\"loginButton\" variant=\"primary\" onClick={this.returnHome}>Cancel</Button>\n        </form>\n        </div>\n      </Jumbotron>\n    </div>\n  );\n}\n}\n\nconst mapDispatchToProps = {\n  getUserInfo\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n})\n\nexport default compose(withRouter,\n  connect(mapStateToProps, mapDispatchToProps))(Login);\n","import React from 'react';\nimport { Button, Jumbotron } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport {withRouter} from 'react-router';\nimport { compose } from 'redux'\nimport { connect } from 'react-redux';\n// import { getUserInfo } from '../../actions/index.js';\n\nclass Signup extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      name: \"\",\n     email: \"\",\n     password: \"\",\n     username: \"\"\n    }\n  }\n\n  captureText = (e) => {\n  this.setState({\n    [e.target.name]: e.target.value\n  })\n}\n\nonSubmit = (e) => {\n  e.preventDefault()\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\"name\": this.state.name, \"email\": this.state.email,\n    \"username\": this.state.username, \"password\": this.state.password});\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch(\"http://localhost:4000/auth/signup\", requestOptions)\n    .then(response => response.json())\n    .then(result => {\n      if(result.token){localStorage.token = result.token}\n      // this.props.getUserInfo(localStorage.token)\n      this.props.history.push('/homepage')\n    })\n    .catch(error => console.log('error', error));\n}\n\n  render(){\n  return (\n      <div>\n        <Jumbotron>\n        <div className=\"signup\">\n        <h1 className=\"signupH1\">Create an account!</h1>\n        <div className=\"signupForm\">\n        <h1>Signup</h1>\n        <form>\n          <label>Name:</label>\n          <input type=\"text\" name=\"name\" placeholder=\"name\" onChange={this.captureText}></input><br/>\n          <label>Email:</label>\n          <input type=\"text\" name=\"email\" placeholder=\"email\" onChange={this.captureText}></input><br/>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" placeholder=\"username\" onChange={this.captureText}></input><br/>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" placeholder=\"password\" onChange={this.captureText}></input><br/>\n        </form>\n        <Button variant=\"primary\" onClick={this.onSubmit}>Sign up</Button>\n          <Link to=\"/\">\n            <Button variant=\"primary\">Cancel</Button>\n          </Link>\n        </div>\n        </div>\n        </Jumbotron>\n      </div>\n  );\n}\n}\n\nconst mapDispatchToProps = {\n};\n\nconst mapStateToProps = (state) => ({\n})\n\nexport default compose(withRouter,\n  connect(mapStateToProps, mapDispatchToProps))(Signup);\n","import React from 'react';\n\nclass Profile extends React.Component {\n\n  render(){\n  return (\n    <div className=\"profile\" onClick={this.props.toggle}>\n\n    profile\n    </div>\n  );\n}\n}\n\nexport default Profile\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Profile from '../profile/profile.js'\nimport { Link } from \"react-router-dom\";\n\nclass Item extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      seller: {},\n      showProfile: false\n    }\n  }\n\n  toggleProfile = () => {\n    var requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n      };\n\n    fetch(`http://localhost:4000/users/find/?userID=${this.props.item.sellerID}`, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          seller: result,\n          showProfile: true\n        })\n        console.log(result)\n      })\n      .catch(error => console.log('error', error));\n      this.renderProfile()\n      }\n\n      renderProfile = () => {\n        if(this.state.showProfile){\n        return <Profile toggle={this.toggleProfileState}/>\n        }\n      }\n\n      toggleProfileState = () => {\n        this.setState({\n          showProfile: !this.state.showProfile\n        })\n      }\n\n\n  render(){\n  return (\n    <Container className=\"item\">\n      <Row>\n        <Col className=\"itemCol1\" lg={3}>\n        <img className=\"itemIMG\" src={this.props.item.image} alt=\"item\"/>\n        </Col>\n        <Col className=\"itemCol2\" lg={9}>\n          {this.props.item.name}<br/>\n          {this.props.item.description}<br/>\n          {this.props.item.price}<br/>\n        <p>seller: <div className=\"itemSellerUsername\" onClick={this.toggleProfile}>{this.props.item.sellerUsername}</div></p>\n        {this.renderProfile()}\n        </Col>\n      </Row>\n      <Row>hello</Row>\n      {console.log(this.props.item)}\n    </Container>\n  );\n}\n}\n\nexport default Item\n","import React from 'react';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CheckoutForm from \"./checkoutForm.js\";\n\nconst promise = loadStripe(process.env.REACT_APP_STRIPE_PK);\nexport default function Checkout() {\n  return (\n    <div className=\"checkout\">\n      <Elements stripe={promise}>\n        <CheckoutForm />\n      </Elements>\n    </div>\n  );\n}\n\n// class Checkout extends React.Component {\n//\n//   render(){\n//   return (\n//     <div className=\"checkout\">\n//       checkout\n//     </div>\n//   );\n// }\n// }\n//\n// export default Checkout\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux'\nimport Item from './item.js'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Checkout from '../checkout/checkout.js'\nimport Navbar from 'react-bootstrap/Navbar'\n\nclass ShoppingCart extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      items: [],\n      checkout: false\n    }\n  }\n\n  componentDidMount(){\n    setTimeout(()=> this.getItemsInfo(),1000)\n  }\n\n  getItemsInfo(){\n  this.props.currentUser.shoppingCart.map(item => {\n    var requestOptions = {\n        method: 'GET',\n        redirect: 'follow'\n      };\n  fetch(`http://localhost:4000/products/find?productID=${item}`, requestOptions)\n  .then(response => response.json())\n  .then(result => {\n    this.setState({\n      items: [...this.state.items, result]\n    })\n  })\n  .catch(error => console.log('error', error));\n  });\n  }\n\n  renderCheckoutComponent(){\n\n  }\n\n  render(){\n  return (\n    <Container className=\"shoppingCart\">\n      <Row>\n        <Col className=\"shoppingCartCol1\" lg={8}>\n          <Navbar className=\"shoppingCartNavbar\"><h1 className=\"shoppingCartH1\">My Cart</h1></Navbar>\n          {(this.props.currentUser.shoppingCart !== undefined && this.props.currentUser.shoppingCart.length === this.state.items.length)\n            ? this.state.items.map(item => {\n            return <Item key={item._id} item={item}/>\n          }) : null}\n        </Col>\n        <Col className=\"shoppingCartCol2\" lg={4}>\n\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n}\n\nconst mapDispatchToProps = {\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n})\n\nexport default compose(withRouter,\n  connect(mapStateToProps, mapDispatchToProps))(ShoppingCart);\n","import React from 'react';\nimport { withRouter } from 'react-router';\n\nclass Signout extends React.Component{\n\n  componentDidMount(){\n    delete localStorage.token\n    this.props.history.push(\"/\")\n  }\n\n  render(){\n  return (\n    <div>\n    </div>\n  );\n}\n}\n\nexport default withRouter(Signout)\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Alert from 'react-bootstrap/Alert'\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux'\n\nclass UploadProduct extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      name: \"\",\n      image: null,\n      price: \"\",\n      description: \"\",\n      successfulUpload: false\n    }\n    this.myRef = React.createRef();\n  }\n\n  captureText = (e) => {\n      this.setState({\n        [e.target.name]: e.target.value\n      })\n    }\n\n    captureFile = (e) => {\n      this.setState({\n        image: e.target.files[0]\n      })\n  }\n\nonSubmit = (e) => {\n  e.preventDefault()\n  var formData = new FormData();\n  formData.append(\"name\", this.state.name);\n  formData.append(\"price\", this.state.price);\n  formData.append(\"description\", this.state.description);\n  formData.append(\"image\", this.state.image);\n  formData.append(\"sellerID\", this.props.currentUser._id);\n  formData.append(\"sellerUsername\", this.props.currentUser.username);\n\n  var requestOptions = {\n    method: 'POST',\n    body: formData,\n    redirect: 'follow'\n  };\n  fetch(\"http://localhost:4000/users/upload-product\", requestOptions)\n    .then(response => response.json())\n    .then(result => {\n      this.setState({\n        successfulUpload: true,\n        name: \"\",\n        price: \"\",\n        description: \"\"\n      })\n      this.myRef.current.value = null\n    })\n    .catch(error => console.log('error', error));\n}\n\n  returnHome = () => {\n    this.props.history.push('/')\n  }\n\n  renderSuccessfulUpload = () => {\n    if(this.state.successfulUpload){\n      return (\n        <Alert className=\"successfulUpload\" variant=\"success\" onClose={() => this.setState({successfulUpload:false})} dismissible>\n          <p className=\"uploadProductAlertMessage\">Upload Complete!</p>\n        </Alert>\n      );\n    }\n  }\n\n  render(){\n  return (\n    <div className=\"uploadProduct\">\n      <Jumbotron className=\"uploadProductJumbotron\">\n        <h1 className=\"uploadProductH1\">Upload a product!</h1>\n        <form className=\"uploadProductForm\">\n          <label>Name:</label><br/>\n          <input className=\"uploadProductInput\"\n            type=\"text\" name=\"name\" placeholder=\"name\" value={this.state.name} onChange={this.captureText}/><br/>\n          {this.renderSuccessfulUpload()}\n          <label>Price:</label><br/>\n          <input className=\"uploadProductInput\"\n            type=\"text\" name=\"price\" placeholder=\"price\" value={this.state.price} onChange={this.captureText}/><br/>\n          <label>Description:</label><br/>\n          <input className=\"uploadProductInput\"\n            type=\"text\" name=\"description\" placeholder=\"description\" value={this.state.description} onChange={this.captureText}/><br/>\n          <label>Image:</label><br/>\n          <input className=\"uploadProductInput\"\n            type=\"file\" name=\"image\" ref={this.myRef} onChange={this.captureFile}/><br/>\n          <Button className=\"uploadProductButton\" variant=\"primary\" onClick={this.onSubmit}>Upload</Button>\n          <Button className=\"uploadProductButton\" variant=\"primary\" onClick={this.returnHome}>Cancel</Button>\n        </form>\n      </Jumbotron>\n    </div>\n  );\n}\n}\n\nconst mapDispatchToProps = {\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n})\n\nexport default compose(withRouter,\n  connect(mapStateToProps, mapDispatchToProps))(UploadProduct);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux'\nimport { getUserInfo } from '../../actions/index.js'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nclass MyProfile extends React.Component {\n\n  render(){\n  return (\n      <Card className=\"myProfile\">\n        <Card.Img className=\"myProfileImg\" variant=\"top\" src={this.props.currentUser.profileImg}/>\n        <Card.Body>\n          <Card.Title>{this.props.currentUser.username}</Card.Title>\n          <Card.Text>\n            Some quick example text to build on the card title and make up the bulk of\n            the card's content.\n          </Card.Text>\n        </Card.Body>\n        <ListGroup className=\"list-group-flush\">\n          <ListGroup.Item>Cras justo odio</ListGroup.Item>\n          <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n          <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\n        </ListGroup>\n        <Card.Body>\n          <Card.Link href=\"#\">Card Link</Card.Link>\n          <Card.Link href=\"#\">Another Link</Card.Link>\n        </Card.Body>\n        {console.log(this.props.currentUser)}\n      </Card>\n  );\n}\n}\n\nconst mapDispatchToProps = {\n  getUserInfo\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n})\n\nexport default compose(withRouter,\n  connect(mapStateToProps, mapDispatchToProps))(MyProfile);\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux'\nimport { getUserInfo } from '../../actions/index.js'\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nclass EditMyProfile extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      name: \"\",\n      profileImg: null,\n      price: \"\",\n      description: \"\",\n      sellerID: \"\",\n      successfulUpload: false,\n      inputKey: \"\",\n      changePicture: false\n    }\n    this.myRef = React.createRef();\n  }\n\n  changeProfilePicture = () => {\n    this.setState({\n      changePicture: !this.state.changePicture\n    })\n    }\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    var formData = new FormData();\n    // formData.append(\"name\", this.state.name);\n    // formData.append(\"price\", this.state.price);\n    // formData.append(\"description\", this.state.description);\n    formData.append(\"profileImg\", this.state.image);\n    // formData.append(\"sellerID\", this.props.currentUser._id);\n    var requestOptions = {\n      method: 'PUT',\n      body: formData,\n      redirect: 'follow'\n    };\n    fetch(`http://localhost:4000/users/edit?userID=${this.props.currentUser._id}`, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          successfulUpload: true,\n          name: \"\",\n          price: \"\",\n          description: \"\",\n          sellerID: \"\"\n        })\n        this.props.getUserInfo(localStorage.token)\n        this.myRef.current.value = null\n      })\n      .catch(error => console.log('error', error));\n  }\n\n\n  renderSelectPicture =() => {\n    if(this.state.changePicture){\n      return (\n        <div>\n        <input type=\"file\" name=\"image\" ref={this.myRef} onChange={this.captureFile}/><br/>\n        <Button onClick={this.onSubmit}>Submit</Button>\n        </div>\n      )\n    }\n  }\n\n  captureFile = (e) => {\n    this.setState({\n      image: e.target.files[0]\n    })\n}\n\n\n  render(){\n  return (\n      <Card className=\"editMyProfile\">\n        <div className=\"editMyProfileDivContainer\">\n        <Card.Img className=\"editMyProfileImg\" variant=\"top\" src={this.props.currentUser.profileImg}/>\n        <div className=\"editMyProfileDivContainer1\">\n        <Button className=\"editMyProfileImgButton\" onClick={this.changeProfilePicture}>Change Profile Picture</Button>\n        {this.renderSelectPicture()}\n        </div>\n        </div>\n        <Card.Body>\n          <Card.Title>{this.props.currentUser.username}</Card.Title>\n          <Card.Text>\n            blurb\n          </Card.Text>\n        </Card.Body>\n        <ListGroup className=\"list-group-flush\">\n          <ListGroup.Item>Location: {null}</ListGroup.Item>\n          <ListGroup.Item>Member Since: {null}</ListGroup.Item>\n          <ListGroup.Item>Name: {null}</ListGroup.Item>\n        </ListGroup>\n        <Card.Body>\n          <Card.Link href=\"#\">Reviews</Card.Link>\n          <Card.Link href=\"#\">Another Link</Card.Link>\n        </Card.Body>\n        {console.log(this.props.currentUser)}\n      </Card>\n  );\n}\n}\n\nconst mapDispatchToProps = {\n  getUserInfo\n};\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.currentUser\n})\n\nexport default compose(withRouter,\n  connect(mapStateToProps, mapDispatchToProps))(EditMyProfile);\n","import React from 'react';\nimport AppNavbar from './components/appNavbar/appNavbar.js';\nimport { Route, Switch } from 'react-router-dom';\nimport Homepage from './components/homepage/homepage.js';\nimport Login from './components/authentication/login.js';\nimport Signup from './components/authentication/signup.js';\nimport ShoppingCart from './components/shoppingCart/shoppingCart.js'\nimport Signout from './components/authentication/signout.js';\nimport UploadProduct from './components/uploadProduct/uploadProduct.js';\nimport MyProfile from './components/profile/myProfile.js';\nimport EditMyProfile from './components/profile/editMyProfile.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nexport const Routes = () => {\n  return (\n    <div>\n      <AppNavbar/>\n      <Switch>\n        <Route exact path=\"/\" component={Homepage}/>\n        <Route exact path=\"/login\" component={Login}/>\n        <Route exact path=\"/signup\" component={Signup}/>\n        <Route exact path=\"/shoppingcart\" component={ShoppingCart}/>\n        <Route exact path=\"/signout\" component={Signout}/>\n        <Route exact path=\"/upload-product\" component={UploadProduct}/>\n        <Route exact path=\"/my-profile\" component={MyProfile}/>\n        <Route exact path=\"/edit-my-profile\" component={EditMyProfile}/>\n      </Switch>\n    </div>\n  );\n}\n","import { GET_INFO } from '../actions/index.js';\n\nconst initialState = {\n  currentUser: {}\n}\n\nexport function reducer(state = initialState, action) {\n  // console.log('reducer', state, action);\n  switch(action.type){\n\n    case GET_INFO:\n      return Object.assign({}, state, {\n        currentUser: action.payload.arg\n      });\n\n  // case GET_COOKIE:\n  //   console.log(\"get cookie\")\n  //   return Object.assign({}, state, {\n  //     cookie: action.payload.arg\n  //   });\n\n    default:\n      return state\n  }\n}\n","import {createStore, applyMiddleware} from 'redux'\nimport {reducer} from '../reducers/index'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\n// import {createStore, applyMiddleware} from 'redux'\n// import {reducer} from '../reducers/index'\n// import {composeWithDevTools} from 'redux-devtools-extension'\n// import thunk from \"redux-thunk\";\n// import { persistStore, persistReducer } from 'redux-persist'\n// import storage from 'redux-persist/lib/storage'\n//\n// const persistConfig = {\n//   key: 'root',\n//   storage,\n// }\n//\n// const persistedReducer = persistReducer(persistConfig, reducer)\n//\n// export const Random = () => {\n//   const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\n//   let persistor = persistStore(store)\n//   return { store, persistor }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Routes } from './routes';\nimport { Provider } from 'react-redux';\nimport { store } from './store/index.js'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Routes/>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import * as serviceWorker from './serviceWorker';\n// import { BrowserRouter as Router } from \"react-router-dom\";\n// import { Routes } from './routes';\n// import { Provider } from 'react-redux';\n// import { Random } from './store/index.js'\n// import { PersistGate } from 'redux-persist/integration/react'\n//\n// ReactDOM.render(\n//   <Provider store={Random.store}>\n//     <PersistGate loading={null} persistor={Random.persistor}>\n//     <Router>\n//       <Routes/>\n//     </Router>\n//     </PersistGate>\n//   </Provider>,\n//   document.getElementById('root')\n// );\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}